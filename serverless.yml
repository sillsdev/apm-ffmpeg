# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: apm-ffmpeg

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "^3.21.0"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev #cli build params will override this!!
  stackName: apm-ffmpeg${self:custom.myStage}

custom:
  myStage: ${opt:stage, self:provider.stage} #use the --stage CLI option if it exists, or use provider.stage

plugins: 
  -serverless-plugin-typescript

package:
  patterns:
    - 'node_modules/**/*'  
   

functions:
  apm-ffmpeg:
    handler: index.handler
    name: apm-ffmpeg-${self:custom.myStage} # optional, Deployed Lambda name
    description: convert files # optional, Description to publish to AWS
    runtime: nodejs18.x # optional overwrite, default is provider runtime
    timeout: 600 # optional, in seconds, default is 6
    memorySize: 1024 # optional, in MB, default is 1024
    role: ${file(./serverless.env.yml):${self:custom.myStage}.SIL_TR_LAMBDA_ROLE}
    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
      - s3: ${file(./serverless.env.yml):${self:custom.myStage}.SIL_TR_PUBLISHREQ_BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
    environment:
      efspath: 	${file(./serverless.env.yml):${self:custom.myStage}.efspath}